
name: Golang Protobuf Compile
on:
  workflow_call:
    secrets:
      cr-pat:
        description: 'Personal access token'
        required: true
      slack-channel:
        description: 'Slack channel id a success/error message should be send to.'
        required: false
      slack-webhook:
        description: 'Slack webhick for publishing messages.'
        required: false
    inputs:
      upload-artifact:
        type: boolean

jobs:
  compile-go:
    name: Compile for Golang
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/tommzn/github-ci/images/protobuf-compiler-go-alpine
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.cr-pat }}
    steps:
      - name: Protoc Version
        run: |
          protoc --version 
          go version
      - name: Checkout Protobuf event defs
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Compile
        run: |
          protoc --go_out=./ *.proto
      - name: Send Slack Message (Failed)
        if: failure() && ${{ secrets.slack-webhook != '' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.slack-channel }}
          SLACK_COLOR: job.status
          SLACK_TITLE: "Go Protobuf Compile failed!"
          SLACK_WEBHOOK: ${{ secrets.slack-webhook }}
      - name: Send Slack Message (Success)
        if: success() && ${{ secrets.slack-webhook != '' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.slack-channel }}
          SLACK_COLOR: job.status
          SLACK_TITLE: "Go Protobuf Compile successful!"
          SLACK_WEBHOOK: ${{ secrets.slack-webhook }}
      - name: Upload Golang artifacts
        if: inputs.upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: golang-events
          path: ./*.pb.go
          retention-days: 1
        
        